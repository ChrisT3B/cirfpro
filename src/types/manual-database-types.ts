// src/types/manual-database-types.ts
/**
 * Manual type definitions for database views and complex queries
 * that can't be auto-generated by Supabase
 */

import type { Database } from './database.types'

// Re-export commonly used table types for convenience
export type CoachAthleteInvitation = Database['public']['Tables']['coach_athlete_invitations']['Row']
export type CoachAthleteInvitationInsert = Database['public']['Tables']['coach_athlete_invitations']['Insert']
export type CoachAthleteInvitationUpdate = Database['public']['Tables']['coach_athlete_invitations']['Update']

// View types (these genuinely need manual definitions)
export interface PublicCoachDirectory {
  id: string
  workspace_slug: string
  workspace_name: string | null
  coaching_philosophy: string | null
  years_experience: number | null
  coaching_location: string | null
  price_range: string | null
  availability_status: string
  profile_photo_url: string | null
  qualifications: string[] | null
  specializations: string[] | null
  first_name: string
  last_name: string
  email: string
  created_at: string
}

// Complex joined query types
export interface CoachProfileWithUser {
  user_id: string
  workspace_slug: string
  users?: {
    email: string
    first_name?: string | null
    last_name?: string | null
  }
}

export interface InvitationWithExpiry extends CoachAthleteInvitation {
  days_until_expiry?: number
}

// Supabase query result types
export type SupabaseQueryResult<T> = {
  data: T | null
  error: {
    message: string
    details: string
    hint: string
    code: string
  } | null
}

export type SupabaseQueryArrayResult<T> = {
  data: T[] | null
  error: {
    message: string
    details: string
    hint: string
    code: string
  } | null
}